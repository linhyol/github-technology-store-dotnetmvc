#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VLMHShop.Models
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "QLBANSP")]
    public partial class DataQLBanDT1DataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertNHASX(NHASX instance);
        partial void UpdateNHASX(NHASX instance);
        partial void DeleteNHASX(NHASX instance);
        partial void InsertADMIN(ADMIN instance);
        partial void UpdateADMIN(ADMIN instance);
        partial void DeleteADMIN(ADMIN instance);
        partial void InsertCHITIETDONTHANG(CHITIETDONTHANG instance);
        partial void UpdateCHITIETDONTHANG(CHITIETDONTHANG instance);
        partial void DeleteCHITIETDONTHANG(CHITIETDONTHANG instance);
        partial void InsertDONDATHANG(DONDATHANG instance);
        partial void UpdateDONDATHANG(DONDATHANG instance);
        partial void DeleteDONDATHANG(DONDATHANG instance);
        partial void InsertDT(DT instance);
        partial void UpdateDT(DT instance);
        partial void DeleteDT(DT instance);
        partial void InsertKHACHHANG(KHACHHANG instance);
        partial void UpdateKHACHHANG(KHACHHANG instance);
        partial void DeleteKHACHHANG(KHACHHANG instance);
        partial void InsertLOAI(LOAI instance);
        partial void UpdateLOAI(LOAI instance);
        partial void DeleteLOAI(LOAI instance);
        #endregion

        public DataQLBanDT1DataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLBANSPConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DataQLBanDT1DataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataQLBanDT1DataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataQLBanDT1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataQLBanDT1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<NHASX> NHASXes
        {
            get
            {
                return this.GetTable<NHASX>();
            }
        }

        public System.Data.Linq.Table<ADMIN> ADMINs
        {
            get
            {
                return this.GetTable<ADMIN>();
            }
        }

        public System.Data.Linq.Table<CHITIETDONTHANG> CHITIETDONTHANGs
        {
            get
            {
                return this.GetTable<CHITIETDONTHANG>();
            }
        }

        public System.Data.Linq.Table<DONDATHANG> DONDATHANGs
        {
            get
            {
                return this.GetTable<DONDATHANG>();
            }
        }

        public System.Data.Linq.Table<DT> DTs
        {
            get
            {
                return this.GetTable<DT>();
            }
        }

        public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
        {
            get
            {
                return this.GetTable<KHACHHANG>();
            }
        }

        public System.Data.Linq.Table<LOAI> LOAIs
        {
            get
            {
                return this.GetTable<LOAI>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NHASX")]
    public partial class NHASX : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MaNSX;

        private string _TenNSX;

        private string _Diachi;

        private string _DienThoai;

        private EntitySet<DT> _DTs;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaNSXChanging(int value);
        partial void OnMaNSXChanged();
        partial void OnTenNSXChanging(string value);
        partial void OnTenNSXChanged();
        partial void OnDiachiChanging(string value);
        partial void OnDiachiChanged();
        partial void OnDienThoaiChanging(string value);
        partial void OnDienThoaiChanged();
        #endregion

        public NHASX()
        {
            this._DTs = new EntitySet<DT>(new Action<DT>(this.attach_DTs), new Action<DT>(this.detach_DTs));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaNSX", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MaNSX
        {
            get
            {
                return this._MaNSX;
            }
            set
            {
                if ((this._MaNSX != value))
                {
                    this.OnMaNSXChanging(value);
                    this.SendPropertyChanging();
                    this._MaNSX = value;
                    this.SendPropertyChanged("MaNSX");
                    this.OnMaNSXChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenNSX", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string TenNSX
        {
            get
            {
                return this._TenNSX;
            }
            set
            {
                if ((this._TenNSX != value))
                {
                    this.OnTenNSXChanging(value);
                    this.SendPropertyChanging();
                    this._TenNSX = value;
                    this.SendPropertyChanged("TenNSX");
                    this.OnTenNSXChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Diachi", DbType = "NVarChar(200)")]
        public string Diachi
        {
            get
            {
                return this._Diachi;
            }
            set
            {
                if ((this._Diachi != value))
                {
                    this.OnDiachiChanging(value);
                    this.SendPropertyChanging();
                    this._Diachi = value;
                    this.SendPropertyChanged("Diachi");
                    this.OnDiachiChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DienThoai", DbType = "VarChar(50)")]
        public string DienThoai
        {
            get
            {
                return this._DienThoai;
            }
            set
            {
                if ((this._DienThoai != value))
                {
                    this.OnDienThoaiChanging(value);
                    this.SendPropertyChanging();
                    this._DienThoai = value;
                    this.SendPropertyChanged("DienThoai");
                    this.OnDienThoaiChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "NHASX_DT", Storage = "_DTs", ThisKey = "MaNSX", OtherKey = "MaNSX")]
        public EntitySet<DT> DTs
        {
            get
            {
                return this._DTs;
            }
            set
            {
                this._DTs.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_DTs(DT entity)
        {
            this.SendPropertyChanging();
            entity.NHASX = this;
        }

        private void detach_DTs(DT entity)
        {
            this.SendPropertyChanging();
            entity.NHASX = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ADMIN")]
    public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _UserAdmin;

        private string _PassAdmin;

        private string _HoTen;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnUserAdminChanging(string value);
        partial void OnUserAdminChanged();
        partial void OnPassAdminChanging(string value);
        partial void OnPassAdminChanged();
        partial void OnHoTenChanging(string value);
        partial void OnHoTenChanged();
        #endregion

        public ADMIN()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserAdmin", DbType = "VarChar(30) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string UserAdmin
        {
            get
            {
                return this._UserAdmin;
            }
            set
            {
                if ((this._UserAdmin != value))
                {
                    this.OnUserAdminChanging(value);
                    this.SendPropertyChanging();
                    this._UserAdmin = value;
                    this.SendPropertyChanged("UserAdmin");
                    this.OnUserAdminChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PassAdmin", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string PassAdmin
        {
            get
            {
                return this._PassAdmin;
            }
            set
            {
                if ((this._PassAdmin != value))
                {
                    this.OnPassAdminChanging(value);
                    this.SendPropertyChanging();
                    this._PassAdmin = value;
                    this.SendPropertyChanged("PassAdmin");
                    this.OnPassAdminChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HoTen", DbType = "NVarChar(50)")]
        public string HoTen
        {
            get
            {
                return this._HoTen;
            }
            set
            {
                if ((this._HoTen != value))
                {
                    this.OnHoTenChanging(value);
                    this.SendPropertyChanging();
                    this._HoTen = value;
                    this.SendPropertyChanged("HoTen");
                    this.OnHoTenChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CHITIETDONTHANG")]
    public partial class CHITIETDONTHANG : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MaDonHang;

        private int _Madt;

        private System.Nullable<int> _Soluong;

        private System.Nullable<decimal> _Dongia;

        private EntityRef<DONDATHANG> _DONDATHANG;

        private EntityRef<DT> _DT;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaDonHangChanging(int value);
        partial void OnMaDonHangChanged();
        partial void OnMadtChanging(int value);
        partial void OnMadtChanged();
        partial void OnSoluongChanging(System.Nullable<int> value);
        partial void OnSoluongChanged();
        partial void OnDongiaChanging(System.Nullable<decimal> value);
        partial void OnDongiaChanged();
        #endregion

        public CHITIETDONTHANG()
        {
            this._DONDATHANG = default(EntityRef<DONDATHANG>);
            this._DT = default(EntityRef<DT>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaDonHang", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int MaDonHang
        {
            get
            {
                return this._MaDonHang;
            }
            set
            {
                if ((this._MaDonHang != value))
                {
                    if (this._DONDATHANG.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaDonHangChanging(value);
                    this.SendPropertyChanging();
                    this._MaDonHang = value;
                    this.SendPropertyChanged("MaDonHang");
                    this.OnMaDonHangChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Madt", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int Madt
        {
            get
            {
                return this._Madt;
            }
            set
            {
                if ((this._Madt != value))
                {
                    if (this._DT.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMadtChanging(value);
                    this.SendPropertyChanging();
                    this._Madt = value;
                    this.SendPropertyChanged("Madt");
                    this.OnMadtChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Soluong", DbType = "Int")]
        public System.Nullable<int> Soluong
        {
            get
            {
                return this._Soluong;
            }
            set
            {
                if ((this._Soluong != value))
                {
                    this.OnSoluongChanging(value);
                    this.SendPropertyChanging();
                    this._Soluong = value;
                    this.SendPropertyChanged("Soluong");
                    this.OnSoluongChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dongia", DbType = "Decimal(18,0)")]
        public System.Nullable<decimal> Dongia
        {
            get
            {
                return this._Dongia;
            }
            set
            {
                if ((this._Dongia != value))
                {
                    this.OnDongiaChanging(value);
                    this.SendPropertyChanging();
                    this._Dongia = value;
                    this.SendPropertyChanged("Dongia");
                    this.OnDongiaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "DONDATHANG_CHITIETDONTHANG", Storage = "_DONDATHANG", ThisKey = "MaDonHang", OtherKey = "MaDonHang", IsForeignKey = true)]
        public DONDATHANG DONDATHANG
        {
            get
            {
                return this._DONDATHANG.Entity;
            }
            set
            {
                DONDATHANG previousValue = this._DONDATHANG.Entity;
                if (((previousValue != value)
                            || (this._DONDATHANG.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._DONDATHANG.Entity = null;
                        previousValue.CHITIETDONTHANGs.Remove(this);
                    }
                    this._DONDATHANG.Entity = value;
                    if ((value != null))
                    {
                        value.CHITIETDONTHANGs.Add(this);
                        this._MaDonHang = value.MaDonHang;
                    }
                    else
                    {
                        this._MaDonHang = default(int);
                    }
                    this.SendPropertyChanged("DONDATHANG");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "DT_CHITIETDONTHANG", Storage = "_DT", ThisKey = "Madt", OtherKey = "Madt", IsForeignKey = true)]
        public DT DT
        {
            get
            {
                return this._DT.Entity;
            }
            set
            {
                DT previousValue = this._DT.Entity;
                if (((previousValue != value)
                            || (this._DT.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._DT.Entity = null;
                        previousValue.CHITIETDONTHANGs.Remove(this);
                    }
                    this._DT.Entity = value;
                    if ((value != null))
                    {
                        value.CHITIETDONTHANGs.Add(this);
                        this._Madt = value.Madt;
                    }
                    else
                    {
                        this._Madt = default(int);
                    }
                    this.SendPropertyChanged("DT");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.DONDATHANG")]
    public partial class DONDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MaDonHang;

        private System.Nullable<bool> _Dathanhtoan;

        private System.Nullable<bool> _Tinhtranggiaohang;

        private System.Nullable<System.DateTime> _Ngaydat;

        private System.Nullable<System.DateTime> _Ngaygiao;

        private System.Nullable<int> _MaKH;

        private EntitySet<CHITIETDONTHANG> _CHITIETDONTHANGs;

        private EntityRef<KHACHHANG> _KHACHHANG;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaDonHangChanging(int value);
        partial void OnMaDonHangChanged();
        partial void OnDathanhtoanChanging(System.Nullable<bool> value);
        partial void OnDathanhtoanChanged();
        partial void OnTinhtranggiaohangChanging(System.Nullable<bool> value);
        partial void OnTinhtranggiaohangChanged();
        partial void OnNgaydatChanging(System.Nullable<System.DateTime> value);
        partial void OnNgaydatChanged();
        partial void OnNgaygiaoChanging(System.Nullable<System.DateTime> value);
        partial void OnNgaygiaoChanged();
        partial void OnMaKHChanging(System.Nullable<int> value);
        partial void OnMaKHChanged();
        #endregion

        public DONDATHANG()
        {
            this._CHITIETDONTHANGs = new EntitySet<CHITIETDONTHANG>(new Action<CHITIETDONTHANG>(this.attach_CHITIETDONTHANGs), new Action<CHITIETDONTHANG>(this.detach_CHITIETDONTHANGs));
            this._KHACHHANG = default(EntityRef<KHACHHANG>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaDonHang", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MaDonHang
        {
            get
            {
                return this._MaDonHang;
            }
            set
            {
                if ((this._MaDonHang != value))
                {
                    this.OnMaDonHangChanging(value);
                    this.SendPropertyChanging();
                    this._MaDonHang = value;
                    this.SendPropertyChanged("MaDonHang");
                    this.OnMaDonHangChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dathanhtoan", DbType = "Bit")]
        public System.Nullable<bool> Dathanhtoan
        {
            get
            {
                return this._Dathanhtoan;
            }
            set
            {
                if ((this._Dathanhtoan != value))
                {
                    this.OnDathanhtoanChanging(value);
                    this.SendPropertyChanging();
                    this._Dathanhtoan = value;
                    this.SendPropertyChanged("Dathanhtoan");
                    this.OnDathanhtoanChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tinhtranggiaohang", DbType = "Bit")]
        public System.Nullable<bool> Tinhtranggiaohang
        {
            get
            {
                return this._Tinhtranggiaohang;
            }
            set
            {
                if ((this._Tinhtranggiaohang != value))
                {
                    this.OnTinhtranggiaohangChanging(value);
                    this.SendPropertyChanging();
                    this._Tinhtranggiaohang = value;
                    this.SendPropertyChanged("Tinhtranggiaohang");
                    this.OnTinhtranggiaohangChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ngaydat", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Ngaydat
        {
            get
            {
                return this._Ngaydat;
            }
            set
            {
                if ((this._Ngaydat != value))
                {
                    this.OnNgaydatChanging(value);
                    this.SendPropertyChanging();
                    this._Ngaydat = value;
                    this.SendPropertyChanged("Ngaydat");
                    this.OnNgaydatChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ngaygiao", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Ngaygiao
        {
            get
            {
                return this._Ngaygiao;
            }
            set
            {
                if ((this._Ngaygiao != value))
                {
                    this.OnNgaygiaoChanging(value);
                    this.SendPropertyChanging();
                    this._Ngaygiao = value;
                    this.SendPropertyChanged("Ngaygiao");
                    this.OnNgaygiaoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaKH", DbType = "Int")]
        public System.Nullable<int> MaKH
        {
            get
            {
                return this._MaKH;
            }
            set
            {
                if ((this._MaKH != value))
                {
                    if (this._KHACHHANG.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaKHChanging(value);
                    this.SendPropertyChanging();
                    this._MaKH = value;
                    this.SendPropertyChanged("MaKH");
                    this.OnMaKHChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "DONDATHANG_CHITIETDONTHANG", Storage = "_CHITIETDONTHANGs", ThisKey = "MaDonHang", OtherKey = "MaDonHang")]
        public EntitySet<CHITIETDONTHANG> CHITIETDONTHANGs
        {
            get
            {
                return this._CHITIETDONTHANGs;
            }
            set
            {
                this._CHITIETDONTHANGs.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "KHACHHANG_DONDATHANG", Storage = "_KHACHHANG", ThisKey = "MaKH", OtherKey = "MaKH", IsForeignKey = true)]
        public KHACHHANG KHACHHANG
        {
            get
            {
                return this._KHACHHANG.Entity;
            }
            set
            {
                KHACHHANG previousValue = this._KHACHHANG.Entity;
                if (((previousValue != value)
                            || (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._KHACHHANG.Entity = null;
                        previousValue.DONDATHANGs.Remove(this);
                    }
                    this._KHACHHANG.Entity = value;
                    if ((value != null))
                    {
                        value.DONDATHANGs.Add(this);
                        this._MaKH = value.MaKH;
                    }
                    else
                    {
                        this._MaKH = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("KHACHHANG");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
        {
            this.SendPropertyChanging();
            entity.DONDATHANG = this;
        }

        private void detach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
        {
            this.SendPropertyChanging();
            entity.DONDATHANG = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.DT")]
    public partial class DT : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Madt;

        private string _Tendt;

        private System.Nullable<decimal> _Giaban;

        private string _Mota;

        private string _Anhbia;

        private System.Nullable<System.DateTime> _Ngaycapnhat;

        private System.Nullable<int> _Soluongton;

        private System.Nullable<int> _MaLoai;

        private System.Nullable<int> _MaNSX;

        private EntitySet<CHITIETDONTHANG> _CHITIETDONTHANGs;

        private EntityRef<NHASX> _NHASX;

        private EntityRef<LOAI> _LOAI;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMadtChanging(int value);
        partial void OnMadtChanged();
        partial void OnTendtChanging(string value);
        partial void OnTendtChanged();
        partial void OnGiabanChanging(System.Nullable<decimal> value);
        partial void OnGiabanChanged();
        partial void OnMotaChanging(string value);
        partial void OnMotaChanged();
        partial void OnAnhbiaChanging(string value);
        partial void OnAnhbiaChanged();
        partial void OnNgaycapnhatChanging(System.Nullable<System.DateTime> value);
        partial void OnNgaycapnhatChanged();
        partial void OnSoluongtonChanging(System.Nullable<int> value);
        partial void OnSoluongtonChanged();
        partial void OnMaLoaiChanging(System.Nullable<int> value);
        partial void OnMaLoaiChanged();
        partial void OnMaNSXChanging(System.Nullable<int> value);
        partial void OnMaNSXChanged();
        #endregion

        public DT()
        {
            this._CHITIETDONTHANGs = new EntitySet<CHITIETDONTHANG>(new Action<CHITIETDONTHANG>(this.attach_CHITIETDONTHANGs), new Action<CHITIETDONTHANG>(this.detach_CHITIETDONTHANGs));
            this._NHASX = default(EntityRef<NHASX>);
            this._LOAI = default(EntityRef<LOAI>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Madt", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Madt
        {
            get
            {
                return this._Madt;
            }
            set
            {
                if ((this._Madt != value))
                {
                    this.OnMadtChanging(value);
                    this.SendPropertyChanging();
                    this._Madt = value;
                    this.SendPropertyChanged("Madt");
                    this.OnMadtChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tendt", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string Tendt
        {
            get
            {
                return this._Tendt;
            }
            set
            {
                if ((this._Tendt != value))
                {
                    this.OnTendtChanging(value);
                    this.SendPropertyChanging();
                    this._Tendt = value;
                    this.SendPropertyChanged("Tendt");
                    this.OnTendtChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Giaban", DbType = "Decimal(18,0)")]
        public System.Nullable<decimal> Giaban
        {
            get
            {
                return this._Giaban;
            }
            set
            {
                if ((this._Giaban != value))
                {
                    this.OnGiabanChanging(value);
                    this.SendPropertyChanging();
                    this._Giaban = value;
                    this.SendPropertyChanged("Giaban");
                    this.OnGiabanChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mota", DbType = "NVarChar(MAX)")]
        public string Mota
        {
            get
            {
                return this._Mota;
            }
            set
            {
                if ((this._Mota != value))
                {
                    this.OnMotaChanging(value);
                    this.SendPropertyChanging();
                    this._Mota = value;
                    this.SendPropertyChanged("Mota");
                    this.OnMotaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Anhbia", DbType = "VarChar(50)")]
        public string Anhbia
        {
            get
            {
                return this._Anhbia;
            }
            set
            {
                if ((this._Anhbia != value))
                {
                    this.OnAnhbiaChanging(value);
                    this.SendPropertyChanging();
                    this._Anhbia = value;
                    this.SendPropertyChanged("Anhbia");
                    this.OnAnhbiaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ngaycapnhat", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Ngaycapnhat
        {
            get
            {
                return this._Ngaycapnhat;
            }
            set
            {
                if ((this._Ngaycapnhat != value))
                {
                    this.OnNgaycapnhatChanging(value);
                    this.SendPropertyChanging();
                    this._Ngaycapnhat = value;
                    this.SendPropertyChanged("Ngaycapnhat");
                    this.OnNgaycapnhatChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Soluongton", DbType = "Int")]
        public System.Nullable<int> Soluongton
        {
            get
            {
                return this._Soluongton;
            }
            set
            {
                if ((this._Soluongton != value))
                {
                    this.OnSoluongtonChanging(value);
                    this.SendPropertyChanging();
                    this._Soluongton = value;
                    this.SendPropertyChanged("Soluongton");
                    this.OnSoluongtonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaLoai", DbType = "Int")]
        public System.Nullable<int> MaLoai
        {
            get
            {
                return this._MaLoai;
            }
            set
            {
                if ((this._MaLoai != value))
                {
                    if (this._LOAI.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaLoaiChanging(value);
                    this.SendPropertyChanging();
                    this._MaLoai = value;
                    this.SendPropertyChanged("MaLoai");
                    this.OnMaLoaiChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaNSX", DbType = "Int")]
        public System.Nullable<int> MaNSX
        {
            get
            {
                return this._MaNSX;
            }
            set
            {
                if ((this._MaNSX != value))
                {
                    if (this._NHASX.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaNSXChanging(value);
                    this.SendPropertyChanging();
                    this._MaNSX = value;
                    this.SendPropertyChanged("MaNSX");
                    this.OnMaNSXChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "DT_CHITIETDONTHANG", Storage = "_CHITIETDONTHANGs", ThisKey = "Madt", OtherKey = "Madt")]
        public EntitySet<CHITIETDONTHANG> CHITIETDONTHANGs
        {
            get
            {
                return this._CHITIETDONTHANGs;
            }
            set
            {
                this._CHITIETDONTHANGs.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "NHASX_DT", Storage = "_NHASX", ThisKey = "MaNSX", OtherKey = "MaNSX", IsForeignKey = true)]
        public NHASX NHASX
        {
            get
            {
                return this._NHASX.Entity;
            }
            set
            {
                NHASX previousValue = this._NHASX.Entity;
                if (((previousValue != value)
                            || (this._NHASX.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._NHASX.Entity = null;
                        previousValue.DTs.Remove(this);
                    }
                    this._NHASX.Entity = value;
                    if ((value != null))
                    {
                        value.DTs.Add(this);
                        this._MaNSX = value.MaNSX;
                    }
                    else
                    {
                        this._MaNSX = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("NHASX");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "LOAI_DT", Storage = "_LOAI", ThisKey = "MaLoai", OtherKey = "MaLoai", IsForeignKey = true)]
        public LOAI LOAI
        {
            get
            {
                return this._LOAI.Entity;
            }
            set
            {
                LOAI previousValue = this._LOAI.Entity;
                if (((previousValue != value)
                            || (this._LOAI.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._LOAI.Entity = null;
                        previousValue.DTs.Remove(this);
                    }
                    this._LOAI.Entity = value;
                    if ((value != null))
                    {
                        value.DTs.Add(this);
                        this._MaLoai = value.MaLoai;
                    }
                    else
                    {
                        this._MaLoai = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("LOAI");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
        {
            this.SendPropertyChanging();
            entity.DT = this;
        }

        private void detach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
        {
            this.SendPropertyChanging();
            entity.DT = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.KHACHHANG")]
    public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MaKH;

        private string _HoTen;

        private string _Taikhoan;

        private string _Matkhau;

        private string _Email;

        private string _DiachiKH;

        private string _DienthoaiKH;

        private System.Nullable<System.DateTime> _Ngaysinh;

        private EntitySet<DONDATHANG> _DONDATHANGs;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaKHChanging(int value);
        partial void OnMaKHChanged();
        partial void OnHoTenChanging(string value);
        partial void OnHoTenChanged();
        partial void OnTaikhoanChanging(string value);
        partial void OnTaikhoanChanged();
        partial void OnMatkhauChanging(string value);
        partial void OnMatkhauChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnDiachiKHChanging(string value);
        partial void OnDiachiKHChanged();
        partial void OnDienthoaiKHChanging(string value);
        partial void OnDienthoaiKHChanged();
        partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
        partial void OnNgaysinhChanged();
        #endregion

        public KHACHHANG()
        {
            this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaKH", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MaKH
        {
            get
            {
                return this._MaKH;
            }
            set
            {
                if ((this._MaKH != value))
                {
                    this.OnMaKHChanging(value);
                    this.SendPropertyChanging();
                    this._MaKH = value;
                    this.SendPropertyChanged("MaKH");
                    this.OnMaKHChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HoTen", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string HoTen
        {
            get
            {
                return this._HoTen;
            }
            set
            {
                if ((this._HoTen != value))
                {
                    this.OnHoTenChanging(value);
                    this.SendPropertyChanging();
                    this._HoTen = value;
                    this.SendPropertyChanged("HoTen");
                    this.OnHoTenChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Taikhoan", DbType = "VarChar(50)")]
        public string Taikhoan
        {
            get
            {
                return this._Taikhoan;
            }
            set
            {
                if ((this._Taikhoan != value))
                {
                    this.OnTaikhoanChanging(value);
                    this.SendPropertyChanging();
                    this._Taikhoan = value;
                    this.SendPropertyChanged("Taikhoan");
                    this.OnTaikhoanChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Matkhau", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Matkhau
        {
            get
            {
                return this._Matkhau;
            }
            set
            {
                if ((this._Matkhau != value))
                {
                    this.OnMatkhauChanging(value);
                    this.SendPropertyChanging();
                    this._Matkhau = value;
                    this.SendPropertyChanged("Matkhau");
                    this.OnMatkhauChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "VarChar(100)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DiachiKH", DbType = "NVarChar(200)")]
        public string DiachiKH
        {
            get
            {
                return this._DiachiKH;
            }
            set
            {
                if ((this._DiachiKH != value))
                {
                    this.OnDiachiKHChanging(value);
                    this.SendPropertyChanging();
                    this._DiachiKH = value;
                    this.SendPropertyChanged("DiachiKH");
                    this.OnDiachiKHChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DienthoaiKH", DbType = "VarChar(50)")]
        public string DienthoaiKH
        {
            get
            {
                return this._DienthoaiKH;
            }
            set
            {
                if ((this._DienthoaiKH != value))
                {
                    this.OnDienthoaiKHChanging(value);
                    this.SendPropertyChanging();
                    this._DienthoaiKH = value;
                    this.SendPropertyChanged("DienthoaiKH");
                    this.OnDienthoaiKHChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ngaysinh", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Ngaysinh
        {
            get
            {
                return this._Ngaysinh;
            }
            set
            {
                if ((this._Ngaysinh != value))
                {
                    this.OnNgaysinhChanging(value);
                    this.SendPropertyChanging();
                    this._Ngaysinh = value;
                    this.SendPropertyChanged("Ngaysinh");
                    this.OnNgaysinhChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "KHACHHANG_DONDATHANG", Storage = "_DONDATHANGs", ThisKey = "MaKH", OtherKey = "MaKH")]
        public EntitySet<DONDATHANG> DONDATHANGs
        {
            get
            {
                return this._DONDATHANGs;
            }
            set
            {
                this._DONDATHANGs.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging();
            entity.KHACHHANG = this;
        }

        private void detach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging();
            entity.KHACHHANG = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.LOAI")]
    public partial class LOAI : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MaLoai;

        private string _TenLoai;

        private EntitySet<DT> _DTs;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaLoaiChanging(int value);
        partial void OnMaLoaiChanged();
        partial void OnTenLoaiChanging(string value);
        partial void OnTenLoaiChanged();
        #endregion

        public LOAI()
        {
            this._DTs = new EntitySet<DT>(new Action<DT>(this.attach_DTs), new Action<DT>(this.detach_DTs));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaLoai", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MaLoai
        {
            get
            {
                return this._MaLoai;
            }
            set
            {
                if ((this._MaLoai != value))
                {
                    this.OnMaLoaiChanging(value);
                    this.SendPropertyChanging();
                    this._MaLoai = value;
                    this.SendPropertyChanged("MaLoai");
                    this.OnMaLoaiChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenLoai", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string TenLoai
        {
            get
            {
                return this._TenLoai;
            }
            set
            {
                if ((this._TenLoai != value))
                {
                    this.OnTenLoaiChanging(value);
                    this.SendPropertyChanging();
                    this._TenLoai = value;
                    this.SendPropertyChanged("TenLoai");
                    this.OnTenLoaiChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "LOAI_DT", Storage = "_DTs", ThisKey = "MaLoai", OtherKey = "MaLoai")]
        public EntitySet<DT> DTs
        {
            get
            {
                return this._DTs;
            }
            set
            {
                this._DTs.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_DTs(DT entity)
        {
            this.SendPropertyChanging();
            entity.LOAI = this;
        }

        private void detach_DTs(DT entity)
        {
            this.SendPropertyChanging();
            entity.LOAI = null;
        }

    }
    public class Giohang
    {
        DataQLBanDT1DataContext data = new DataQLBanDT1DataContext();
        public int iMasp { get; set; }
        public string sTensp { get; set; }
        public string sAnhbia { get; set; }
        public double dDongia { get; set; }
        public int iSoluong { get; set; }
        public double dThanhtien
        {
            get { return iSoluong * dDongia; }
        }
        public Giohang(int masp)
        {
            iMasp = masp;
            DT sach = data.DTs.Single(n => n.Madt == iMasp);
            sTensp = sach.Tendt;
            sAnhbia = sach.Anhbia;
            dDongia = double.Parse(sach.Giaban.ToString());
            iSoluong = 1;
        }
    }
}
#pragma warning restore 1591
